--สร้างDatabase--
create database Zoo

--ลบตาราง

drop database Zoo

-- สร้างตาราง 

create table Type (TypeID char(3) , 
					TName Varchar(50),
					primary key (TypeID))

select * from Animal

create table Animal
(AID int Primary key identity(1,1),
AName Varchar(50) not null,
Descriptions Varchar(255)null,
QTY Int,
TypeID char(3),
foreign key(TypeID)references Type(TypeID))


--เพิ่มคอลัมน์--

Alter table Animal
	Add scienceName Varchar(30)




create database ZooDB

create table AnimalType 
(
animal_type_id int not null primary key,
type_name NVarchar(100) not null,
description NVARCHAR(MAX) null ,
)

create table SpeciesInfo
(
species_info_id INT not null primary key,
common_name NVARCHAR(100)  not null,
scientific_name NVARCHAR(100) null,
habitat NVARCHAR(MAX) null,
diet NVARCHAR(MAX) null,
conservation_status NVARCHAR(100) null,
description NVARCHAR(MAX) null
)

create table Enclosure
(
enclosure_id int not null primary key,
name NVARCHAR(100) not null,
location NVARCHAR(200) null
)

create table Keeper
(
keeper_id INT not null primary key, 
name NVARCHAR(100) not null,
phone NVARCHAR(50) null,
email NVARCHAR(100) null
)


-- วิธีเขียน FK --
create table EnclosureKeeper
(
enclosure_id INT NOT NULL,
keeper_id INT NOT NULL,
    PRIMARY KEY (enclosure_id, keeper_id),   -- composite key
    FOREIGN KEY (enclosure_id) REFERENCES Enclosure(enclosure_id),
    FOREIGN KEY (keeper_id) REFERENCES Keeper(keeper_id)
)


create table Food 
(
food_id int not null primary key,
name NVARCHAR(100) not null,
type NVARCHAR(100) null,
unit NVARCHAR(50) null
)

CREATE TABLE Animal
(
    animal_id INT NOT NULL PRIMARY KEY,
    name NVARCHAR(100) NOT NULL,
    gender NVARCHAR(100) NULL,
    birth_date DATE NULL,
    enclosure_id INT NULL,
    animal_type_id INT NULL,
    species_info_id INT NULL,
    FOREIGN KEY (enclosure_id) REFERENCES Enclosure(enclosure_id),
    FOREIGN KEY (animal_type_id) REFERENCES AnimalType(animal_type_id),
    FOREIGN KEY (species_info_id) REFERENCES SpeciesInfo(species_info_id)
)

create table FeedingSchedule
(
feeding_id int not null primary key,
animal_id int not null,
food_id int not null,
amount DECIMAL(10,2) null,
feeding_date date null,
feeding_time TIME null,
keeper_id int null,
 FOREIGN KEY (animal_id) REFERENCES Animal(animal_id),
 FOREIGN KEY (food_id) REFERENCES Food(food_id),
 FOREIGN KEY (keeper_id) REFERENCES Keeper (keeper_id)
)






select * from FeedingSchedule
